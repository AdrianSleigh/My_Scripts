----------------------------
--SSISDB REPORT
--Adrian Sleigh 12/09/25
-----------------------------

USE SSISDB;
GO
SET NOCOUNT ON;
PRINT 'RAN AT: ' + FORMAT(GETDATE(), 'yyyy-MM-dd HH:mm:ss')
      + ' ON SERVER: ' + CAST(@@SERVERNAME AS NVARCHAR(128));

GO
-- Per-execution details for the last 30 days
WITH runs AS (
    SELECT
        e.execution_id,
    SUBSTRING(e.folder_name,1,25) AS Folder_Name,
    SUBSTRING(e.project_name,1,25) AS Project_Name,
    SUBSTRING(e.package_name,1,25) AS Package_Name,
        e.status,
        e.start_time,
	    e.end_time
    FROM catalog.executions AS e
    WHERE e.start_time >= DATEADD(DAY, -30, SYSUTCDATETIME())  -- SSISDB timestamps are UTC
)
SELECT
    r.execution_id,
    r.folder_name,
    r.project_name,
    r.package_name,
    CASE r.status
        WHEN 1 THEN 'Created'
        WHEN 2 THEN 'Running'
        WHEN 3 THEN 'Cancelled'
        WHEN 4 THEN 'Failed'
        WHEN 5 THEN 'Pending'
        WHEN 6 THEN 'Ended unexpectedly'
        WHEN 7 THEN 'Succeeded'
        WHEN 8 THEN 'Stopping'
        WHEN 9 THEN 'Completed'
        ELSE 'Unknown'
    END AS status_description,
    CONVERT(varchar(19),r.start_time,120) AS start_time,
	'' AS [-+-],
    CONVERT(varchar(19),r.end_time,120) AS end_time,
	'' AS [-+-],

    -- Raw duration in seconds (for running executions, this is elapsed so far)
    secs.duration_seconds,

    -- Formatted duration as <days>d HH:MM:SS
    dur.duration_ddhhmmss,

    -- Last "report" message for the execution (message_type = 120)
    CONVERT(varchar(19),rep.message_time,120) AS last_report_time,
   SUBSTRING(rep.message,1,60) AS last_report_message,

    -- Last error message, if any
    CONVERT(varchar(19),err.message_time,120) AS last_error_time,
    CONVERT(varchar(19),err.message,120)      AS last_error_message

FROM runs AS r

-- Latest report message (type 120) per execution
OUTER APPLY (
    SELECT TOP (1)
        em.message_time,
        em.message
    FROM catalog.event_messages AS em
    WHERE em.operation_id = r.execution_id
      AND em.message_type = 120          -- "Report" / informational messages
    ORDER BY em.message_time DESC
) AS rep

-- Latest error message (OnError) per execution
OUTER APPLY (
    SELECT TOP (1)
        em.message_time,
        em.message
    FROM catalog.event_messages AS em
    WHERE em.operation_id = r.execution_id
      AND em.event_name = 'OnError'
    ORDER BY em.message_time DESC
) AS err

-- Duration in seconds (completed: end-start, running: now-start)
OUTER APPLY (
    SELECT
        duration_seconds = CASE
            WHEN r.start_time IS NULL THEN NULL
            WHEN r.end_time  IS NOT NULL THEN DATEDIFF(SECOND, r.start_time, r.end_time)
            ELSE DATEDIFF(SECOND, r.start_time, SYSUTCDATETIME())
        END
) AS secs

-- Format duration as <days>d HH:MM:SS
OUTER APPLY (
    SELECT
        duration_ddhhmmss =
            CASE WHEN secs.duration_seconds IS NULL THEN NULL
                 ELSE CONCAT(
                     CAST(secs.duration_seconds / 86400 AS varchar(10)), 'd ',
                     RIGHT('0' + CAST((secs.duration_seconds % 86400) / 3600 AS varchar(2)), 2), ':',
                     RIGHT('0' + CAST((secs.duration_seconds % 3600) / 60  AS varchar(2)), 2), ':',
                     RIGHT('0' + CAST( secs.duration_seconds % 60          AS varchar(2)), 2)
                 )
            END
) AS dur

ORDER BY
    r.start_time DESC, r.execution_id DESC;
